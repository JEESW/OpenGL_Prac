const GLchar* v_shader_source =
R"(
	#version 330

	layout (location=0) in vec3 vs_position;
	layout (location=1) in vec3 vs_normal;
	layout (location=2) in vec4 vs_color;

	out vec4 fs_color;

	void main()
	{
		mat4 S;
		S[0][0] = (0.8f/75.f);	S[1][0] = 0.f;		S[2][0] = 0.f;	S[3][0] = 0.f;
		S[0][1] = 0.f;		S[1][1] = 0.008f;	S[2][1] = 0.f;	S[3][1] = 0.f;
		S[0][2] = 0.f;		S[1][2] = 0.f;		S[2][2] = 1.f;	S[3][2] = 0.f;
		S[0][3] = 0.f;		S[1][3] = 0.f;		S[2][3] = 0.f;	S[3][3] = 1.f;

		mat4 R1;
		R1[0][0] = cos(radians(90.f));	R1[1][0] = -sin(radians(90.f));	R1[2][0] = 0.f;	R1[3][0] = 0.f;
		R1[0][1] = sin(radians(90.f));	R1[1][1] = cos(radians(90.f));	R1[2][1] = 0.f;	R1[3][1] = 0.f;
		R1[0][2] = 0.f;					R1[1][2] = 0.f;					R1[2][2] = 1.f; R1[3][2] = 0.f;
		R1[0][3] = 0.f;					R1[1][3] = 0.f;					R1[2][3] = 0.f;	R1[3][3] = 1.f;

		mat4 R2;
		R2[0][0] = cos(radians(90.f));	R2[1][0] = 0.f;	R2[2][0] = sin(radians(90.f));	R2[3][0] = 0.f;
		R2[0][1] = 0.f;					R2[1][1] = 1.f;	R2[2][1] = 0.f;					R2[3][1] = 0.f;
		R2[0][2] = -sin(radians(90.f));	R2[1][2] = 0.f;	R2[2][2] = cos(radians(90.f));	R2[3][2] = 0.f;
		R2[0][3] = 0.f;					R2[1][3] = 0.f;	R2[2][3] = 0.f;                 R2[3][3] = 1.f;

		mat4 T1;
		T1[0][0] = 1.f; T1[1][0] = 0.f;	T1[2][0] = 0.f;	T1[3][0] = 0.f;
		T1[0][1] = 0.f; T1[1][1] = 1.f;	T1[2][1] = 0.f;	T1[3][1] = -250.f;
		T1[0][2] = 0.f; T1[1][2] = 0.f;	T1[2][2] = 1.f;	T1[3][2] = 0.f;
		T1[0][3] = 0.f; T1[1][3] = 0.f;	T1[2][3] = 0.f;	T1[3][3] = 1.f;

		mat4 T2;
		T2[0][0] = 1.f; T2[1][0] = 0.f;	T2[2][0] = 0.f;	T2[3][0] = 0.f;
		T2[0][1] = 0.f; T2[1][1] = 1.f;	T2[2][1] = 0.f;	T2[3][1] = 0.f;
		T2[0][2] = 0.f; T2[1][2] = 0.f;	T2[2][2] = 1.f;	T2[3][2] = 225.f;
		T2[0][3] = 0.f; T2[1][3] = 0.f;	T2[2][3] = 0.f;	T2[3][3] = 1.f;

		gl_Position = S * R2 * R1 * T2 * T1 * vec4(vs_position, 1.f);
		fs_color = vs_color;
	}
)";